# Generated by Django 3.2.16 on 2023-10-27 09:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import schedules.mixins
import schedules.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, editable=False, max_length=10, verbose_name='Заголовок')),
                ('start', models.DateField(help_text='Выберите начало учебного месяца (понедельник).', validators=[schedules.validators.correct_start], verbose_name='Начало учебного месяца')),
                ('end', models.DateField(help_text='Выберите конец учебного месяца (воскресенье).', validators=[schedules.validators.correct_end], verbose_name='Конец учебного месяца')),
            ],
            options={
                'verbose_name': 'месяц',
                'verbose_name_plural': 'Месяцы',
                'ordering': ('start',),
            },
            bases=(schedules.mixins.MonthMixin, schedules.mixins.ValidationMonthAndWeekIntervalMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, editable=False, max_length=15, verbose_name='Заголовок')),
                ('year', models.SmallIntegerField(error_messages={'unique': 'Такой год уже существует.'}, help_text='Можно указать только текущий и следующий год. Обязательное поле.', unique=True, validators=[django.core.validators.MinValueValidator(2023), django.core.validators.MaxValueValidator(2024)], verbose_name='Год')),
            ],
            options={
                'verbose_name': 'год',
                'verbose_name_plural': 'Годы',
                'ordering': ('year',),
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Укажите название и номер недели.', max_length=10, verbose_name='Заголовок')),
                ('start', models.DateField(help_text='Выберите начало учебной недели (понедельник).', validators=[schedules.validators.correct_start], verbose_name='Начало учебной недели')),
                ('end', models.DateField(help_text='Выберите конец учебной недели (воскресенье).', validators=[schedules.validators.correct_end], verbose_name='Конец учебной недели')),
                ('month', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='schedules.month', verbose_name='Месяц')),
            ],
            options={
                'verbose_name': 'неделя',
                'verbose_name_plural': 'Недели',
                'ordering': ('start',),
            },
            bases=(schedules.mixins.ValidationMonthAndWeekIntervalMixin, schedules.mixins.WeekMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Обязательное. Укажите время, название и аудиторию пары.', max_length=500, verbose_name='Расписание пар')),
                ('notes', models.TextField(blank=True, help_text='Необязательное. Можно написать заметки для себя.', max_length=500, null=True, verbose_name='Заметки')),
                ('date', models.DateField(help_text='Обязательное. Выберите дату для расписания.', verbose_name='Дата')),
                ('repetition_rate', models.SmallIntegerField(blank=True, choices=[(1, 'Каждую неделю'), (2, 'Раз в 2 недели'), (3, 'Раз в 3 недели'), (4, 'Раз в 4 недели')], help_text='Необязательно. Выберите как часто будет повторяться.', null=True, verbose_name='Частота повторения')),
                ('repetition_count', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], help_text='Необязательное. Выберите сколько раз будет повторяться.', null=True, verbose_name='Количество повторений')),
                ('author', models.ForeignKey(blank=True, help_text='Обязательное. Выберите автора.', on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to=settings.AUTH_USER_MODEL, verbose_name='Автор расписания')),
                ('week', models.ManyToManyField(blank=True, editable=False, related_name='schedules', to='schedules.Week', verbose_name='Недели')),
            ],
            options={
                'verbose_name': 'расписание',
                'verbose_name_plural': 'Расписания',
                'ordering': ('date', 'author'),
                'default_related_name': 'schedules',
            },
            bases=(schedules.mixins.ScheduleMixin, models.Model),
        ),
        migrations.AddField(
            model_name='month',
            name='year',
            field=models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='months', to='schedules.year', verbose_name='Год'),
        ),
        migrations.AddConstraint(
            model_name='week',
            constraint=models.UniqueConstraint(fields=('title', 'month'), name='unique_title_month'),
        ),
        migrations.AddConstraint(
            model_name='week',
            constraint=models.UniqueConstraint(fields=('start', 'end'), name='unique_start_end_week'),
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.UniqueConstraint(fields=('date', 'author'), name='unique_date_author'),
        ),
        migrations.AddConstraint(
            model_name='month',
            constraint=models.UniqueConstraint(fields=('title', 'year'), name='unique_title_year'),
        ),
        migrations.AddConstraint(
            model_name='month',
            constraint=models.UniqueConstraint(fields=('start', 'end'), name='unique_start_end_month'),
        ),
    ]
